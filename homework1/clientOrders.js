/**
 * Задание 2
Вы управляете рестораном, в котором работают разные повара, специализирующиеся на определенных блюдах. Клиенты приходят и делают заказы на разные блюда.

Необходимо создать систему управления этими заказами, которая позволит:

• Отслеживать, какой повар готовит какое блюдо.
• Записывать, какие блюда заказал каждый клиент.

Используйте коллекции Map для хранения блюд и их поваров, а также для хранения заказов каждого клиента. В качестве ключей для клиентов используйте объекты.

Повара и их специализации:

Виктор - специализация: Пицца.
Ольга - специализация: Суши.
Дмитрий - специализация: Десерты.

Блюда и их повара:

Пицца "Маргарита" - повар: Виктор.
Пицца "Пепперони" - повар: Виктор.
Суши "Филадельфия" - повар: Ольга.
Суши "Калифорния" - повар: Ольга.
Тирамису - повар: Дмитрий.
Чизкейк - повар: Дмитрий.

Заказы:

Клиент Алексей заказал: Пиццу "Пепперони" и Тирамису.
Клиент Мария заказала: Суши "Калифорния" и Пиццу "Маргарита".
Клиент Ирина заказала: Чизкейк.
 */


// создание коллекции блюд и их поваров
const dishChefMap = new Map([
    ['Пицца Маргарита', 'Виктор'],
    ['Пицца Пепперони', 'Виктор'],
    ['Суши Филадельфия', 'Ольга'],
    ['Суши Калифорния', 'Ольга'],
    ['Тирамису', 'Дмитрий'],
    ['Чизкейк', 'Дмитрий']
]);

// создание клиентов (ключи для заказов)
const clientAlexey = { name: 'Алексей' };
const clientMaria = { name: 'Мария' };
const clientIrina = { name: 'Ирина' };

// создание коллекции заказов
const clientOrdersMap = new Map([
    [clientAlexey, ['Пицца Пепперони', 'Тирамису']],
    [clientMaria, ['Суши Калифорния', 'Пицца Маргарита']],
    [clientIrina, ['Чизкейк']]
]);

// функция для получения повара, который готовит блюдо
function getChefForDish(dish) {
    return dishChefMap.get(dish);
}

// функция для отображения заказов клиентов
function displayOrders(ordersMap) {
    for (const [client, orders] of ordersMap) {
        console.log(`\nЗаказы клиента ${client.name}:`);
        for (const dish of orders) {
            const chef = getChefForDish(dish);
            console.log(` -${dish} (Повар: ${chef})`);
        };
    };
};

displayOrders(clientOrdersMap);